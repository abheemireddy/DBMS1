Name :Anuhya Bheemireddy


CREATE TABLE `athlete` (
  `Athlete_id` int(16) NOT NULL,
  `Name` varchar(64) NOT NULL,
  `DOB` date NOT NULL,
  `Gender` varchar(16) NOT NULL,
  `Country` varchar(32) NOT NULL,
`Age` int(8) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `athlete` (`Athlete_id`, `Name`, `DOB`, `Gender`, `Country`,`age`) VALUES
(1, 'Long Qingquan', '1990-12-03', 'M', 'China','27'),
(2, 'Shi Zhiyong', '1993-10-10', 'M', 'China','23'),
(3, 'Lu Xiaojun', '1984-07-27', 'M', 'China','33'),
(4, 'Tian Tao', '1994-04-08', 'M', 'China','21'),
(5, 'Deng Wei', '1993-02-14', 'F', 'China','24'),
(6, 'Xiang Yanmei', '1992-06-13', 'F', 'China','23'),
(7, 'Meng Suping', '1989-07-17', 'F', 'China','28'),
(8, ' Sarah Robles', '1988-08-01', 'F', 'USA','29'),
(9, ' Jenny Arthur', '1993-12-11', 'F', 'USA','23'),
(10, 'Morghan King', '1985-10-08', 'F', 'USA','32'),
(11, ' Kendrick Farris', '1986-07-02', 'M', 'USA','31'),
(12, ' Chen Lijun', '1993-02-08', 'M', 'China','24'),
(13, 'Yang Zhe', '1991-07-14', 'M', 'China','25'),
(14, ' Li Yajun', '1993-04-27', 'F', 'China','23'),
(15, ' Lu Bin', '1994-10-18', 'M', 'China','22'),
(16, ' Hu Jianguan', '1993-05-11', 'M', 'China','23'),
(17, 'Zhang Jiawei', '1989-01-08', 'M', 'China','27'),
(18, ' Shan Jun', '1994-08-07', 'M', 'China','22'),
(19, 'Hu Qianxun', '1987-09-18', 'M', 'China','29'),
(20, 'Liu Wei', '1987-11-27', 'M', 'China','29'),
(21, ' Zhao Minggang', '1989-05-30', 'M', 'China','27'),
(22, ' Yu Fengkai', '1995-03-13', 'M', 'China','21'),
(23, 'Ren Cancan', '1986-04-26', 'F', 'China','30'),
(24, ' Yin Junhua', '1990-08-27', 'F', 'China','26'),
(25, ' Li Qian', '1990-06-06', 'F', 'China','26'),
(26, 'Nico Hernandez', '1996-01-04', 'M', 'USA','20'),
(27, ' Antonio Vargas', '1996-08-15', 'M', 'USA','20'),
(28, ' Shakur Stevenson', '1997-06-28', 'M', 'USA','19'),
(29, ' Carlos Balderas', '1996-08-24', 'M', 'USA','20'),
(30, ' Gary Antuanne russell', '1996-07-14', 'M', 'USA','20'),
(31, ' Charles Conwell', '1997-11-02', 'M', 'USA','21'),
(32, ' Mikaela Mayer', '1990-07-04', 'F', 'USA','28'),
(33, ' Claressa Shields', '1995-03-17', 'F', 'USA','21');


CREATE TABLE `athlete_belong` (
  `Athlete_belong_id` int(16) NOT NULL,
  `Athlete_id` int(16) NOT NULL,
  `Team_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `athlete_belong` (`Athlete_belong_id`, `Athlete_id`, `Team_id`) VALUES
(6001, 8, 5001),
(6002, 9, 5001),
(6003, 10, 5001),
(6004, 24, 5002),
(6005, 25, 5002),
(6006, 23, 5002),
(6007, 20, 5003),
(6008, 21, 5003),
(6009, 22, 5003),
(6010, 19, 5004),
(6011, 18, 5004),
(6012, 17, 5004),
(6013, 14, 5005),
(6014, 15, 5005),
(6015, 16, 5005),
(6016, 5, 5006),
(6017, 6, 5006),
(6018, 7, 5006),
(6019, 12, 5007),
(6020, 13, 5007),
(6021, 4, 5007),
(6022, 1, 5008),
(6023, 2, 5008),
(6024, 3, 5008),
(6025, 26, 5009),
(6026, 27, 5009),
(6027, 28, 5009),
(6028, 29, 5010),
(6029, 30, 5010),
(6030, 31, 5010),
(6031, 11, 5010),
(6032, 32, 5011),
(6033, 33, 5011);


CREATE TABLE `boxing` (
  `Event_id` int(16) NOT NULL,
  `B_category` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `boxing` (`Event_id`, `B_category`) VALUES
(7001, 'Light flyweight'),
(7002, 'Flyweight'),
(7003, 'Bantamweight'),
(7004, 'Lightweight');



CREATE TABLE `coach` (
  `Coach_id` int(16) NOT NULL,
  `Coach_name` varchar(16) NOT NULL,
  `Coach_country` varchar(16) NOT NULL,
  `Team_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `coach` (`Coach_id`, `Coach_name`, `Coach_country`, `Team_id`) VALUES
(20001, 'B1', 'USA', 5001),
(20002, 'B2', 'China', 5002),
(20003, 'B3', 'China', 5003),
(20004, 'B4', 'China', 5004),
(20005, 'B5', 'China', 5005),
(20006, 'B6', 'China', 5006),
(20007, 'B7', 'China', 5007),
(20008, 'B8', 'China', 5008),
(20009, 'B9', 'USA', 5009),
(20010, 'B10', 'USA', 5010),
(20011, 'B11', 'China', 5011);


CREATE TABLE `event` (
  `Event_id` int(16) NOT NULL,
  `Start_date` date NOT NULL,
  `End_date` date NOT NULL,
  `Location` varchar(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `event` (`Event_id`, `Start_date`, `End_date`, `Location`) VALUES
(7001, '2016-08-04', '2016-08-14', 'Stage-01'),
(7002, '2016-08-15', '2016-08-25', 'Stage-02'),
(7003, '2016-09-04', '2016-09-07', 'Stage-03'),
(7004, '2016-09-08', '2016-09-10', 'Stage-04'),
(7005, '2016-09-11', '2016-09-12', 'Stage-05'),
(7006, '2016-09-13', '2016-09-14', 'Stage-06'),
(7007, '2016-09-15', '2016-09-16', 'Stage-07'),
(7008, '2016-09-17', '2016-09-18', 'Stage-08');


CREATE TABLE `event_official` (
  `Event_id` int(16) NOT NULL,
  `Id` int(16) NOT NULL,
  `Event_official_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `event_official` (`Event_id`, `Id`, `Event_official_id`) VALUES
(7001, 9001, 10001),
(7001, 9009, 10002),
(7002, 9002, 10003),
(7002, 9010, 10004),
(7003, 9003, 10005),
(7003, 9011, 10006),
(7004, 9004, 10007),
(7004, 9012, 10008),
(7005, 9005, 10009),
(7005, 9013, 10010),
(7006, 9006, 10011),
(7006, 9014, 10012),
(7007, 9007, 10013),
(7007, 9015, 10014),
(7008, 9008, 10015),
(7008, 9016, 10016);


CREATE TABLE `injury_record` (
  `Athlete_id` int(16) NOT NULL,
  `I_id` int(16) NOT NULL,
  `Description` varchar(128) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `injury_record` (`Athlete_id`, `I_id`, `Description`) VALUES
(1, 4001, 'Sprain on right hand.'),
(5, 4002, 'Right leg injury'),
(6, 4003, 'Right hand injury'),
(8, 4004, 'Nose bleed'),
(10, 4005, 'Dislocated right elbow'),
(15, 4006, 'Left leg sprain'),
(20, 4007, 'eye injury'),
(33, 4008, 'Thigh cut');


CREATE TABLE `judge` (
  `Id` int(16) NOT NULL,
  `J_salary` decimal(16,0) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `judge` (`Id`, `J_salary`) VALUES
(9009, '50000'),
(9010, '50000'),
(9011, '50000'),
(9012, '50000'),
(9013, '50000'),
(9014, '50000'),
(9015, '50000'),
(9016, '50000');



CREATE TABLE `match_officials` (
  `Id` int(16) NOT NULL,
  `Name` varchar(16) NOT NULL,
  `Experience_years` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `match_officials` (`Id`, `Name`, `Experience_years`) VALUES
(9001, 'A1', 5),
(9002, 'A2', 4),
(9003, 'A3', 3),
(9004, 'A4', 2),
(9005, 'A5', 5),
(9006, 'A6', 3),
(9007, 'A7', 2),
(9008, 'A7', 3),
(9009, 'A9', 8),
(9010, 'A10', 9),
(9011, 'A11', 10),
(9012, 'A12', 8),
(9013, 'A13', 11),
(9014, 'A14', 9),
(9015, 'A15', 7),
(9016, 'A16', 9);



CREATE TABLE `medal` (
  `Medal_id` int(16) NOT NULL,
  `Athlete_id` int(16) NOT NULL,
  `Prize_money` decimal(16,0) NOT NULL,
  `Medal_type` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `medal` (`Medal_id`, `Athlete_id`, `Prize_money`, `Medal_type`) VALUES
(2001, 1, '10000', 'Gold'),
(2002, 2, '5000', 'Silver'),
(2003, 3, '1000', 'Bronze'),
(2004, 4, '10000', 'Gold'),
(2005, 5, '5000', 'Silver'),
(2006, 6, '1000', 'Bronze'),
(2007, 7, '10000', 'Gold'),
(2008, 8, '5000', 'Silver'),
(2009, 9, '1000', 'Bronze'),
(2010, 10, '10000', 'Gold'),
(2011, 11, '5000', 'Silver'),
(2012, 12, '1000', 'Bronze'),
(2013, 13, '10000', 'Gold'),
(2014, 14, '5000', 'Silver'),
(2015, 15, '1000', 'Bronze'),
(2016, 16, '10000', 'Gold'),
(2017, 17, '5000', 'Silver'),
(2018, 18, '1000', 'Bronze'),
(2019, 19, '10000', 'Gold'),
(2020, 20, '5000', 'Silver'),
(2021, 21, '1000', 'Bronze'),
(2022, 22, '10000', 'Gold'),
(2023, 23, '5000', 'Silver'),
(2024, 24, '1000', 'Bronze');


CREATE TABLE `participate` (
  `Participate_id` int(16) NOT NULL,
  `Athlete_id` int(16) NOT NULL,
  `Event_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `participate` (`Participate_id`, `Athlete_id`, `Event_id`) VALUES
(8001, 8, 7003),
(8002, 9, 7003),
(8003, 10, 7004),
(8004, 24, 7008),
(8005, 25, 7001),
(8006, 23, 7008),
(8007, 20, 7007),
(8008, 21, 7007),
(8009, 22, 7008),
(8010, 19, 7007),
(8011, 18, 7006),
(8012, 17, 7006),
(8013, 14, 7005),
(8014, 15, 7005),
(8015, 16, 7006),
(8016, 5, 7002),
(8017, 6, 7002),
(8018, 7, 7003),
(8019, 12, 7004),
(8020, 13, 7005),
(8021, 4, 7002),
(8022, 1, 7001),
(8023, 2, 7001),
(8024, 3, 7001),
(8025, 26, 7002),
(8026, 27, 7003),
(8027, 28, 7004),
(8028, 29, 7005),
(8029, 30, 7006),
(8030, 31, 7007),
(8031, 11, 7004),
(8032, 32, 7008),
(8033, 33, 7001),
(8034, 33, 7005);


CREATE TABLE `phone_no` (
  `Phone_id` int(16) NOT NULL,
  `Athlete_id` int(16) NOT NULL,
  `Phone` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `phone_no` (`Phone_id`, `Athlete_id`, `Phone`) VALUES
(1001, 1, 1234567890),
(1002, 1, 1452369852),
(1003, 2, 1425365478),
(1004, 2, 1571852364),
(1005, 3, 1245698523),
(1006, 3, 1523654785),
(1007, 4, 1859674258),
(1008, 5, 1589647589),
(1009, 6, 1256347896),
(1010, 7, 1569847583),
(1011, 8, 1563247852),
(1012, 9, 1698574231),
(1013, 10, 1589665231),
(1014, 11, 1254156325),
(1015, 12, 1589656321),
(1016, 13, 1542656324),
(1017, 14, 1563256325),
(1018, 15, 1452145214),
(1019, 16, 1489652367),
(1020, 17, 1569875985),
(1021, 18, 1546456456),
(1022, 19, 1231235698),
(1023, 20, 1236362521),
(1024, 21, 1565645254),
(1025, 22, 1452451245),
(1026, 23, 1555858888),
(1027, 24, 1547854785),
(1028, 25, 1231555555),
(1029, 26, 1111111111),
(1030, 27, 1212121212),
(1031, 28, 1256377777),
(1032, 29, 1888665522),
(1033, 30, 1515161616),
(1034, 31, 1448555898),
(1035, 32, 1222556622),
(1036, 33, 1112222222),
(1037, 33, 1457887485),
(1038, 32, 1222555232),
(1039, 31, 1565645614),
(1040, 30, 1547896582),
(1041, 22, 1546859647);


CREATE TABLE `refree` (
  `Id` int(16) NOT NULL,
  `R.salary` decimal(16,0) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `refree` (`Id`, `R.salary`) VALUES
(9001, '10000'),
(9002, '10000'),
(9003, '10000'),
(9004, '10000'),
(9005, '10000'),
(9006, '10000'),
(9007, '10000'),
(9008, '10000');


CREATE TABLE `result` (
  `Medal_id` int(16) NOT NULL,
  `Athlete_id` int(16) NOT NULL,
  `Result_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `result` (`Medal_id`, `Athlete_id`, `Result_id`) VALUES
(2001, 1, 3001),
(2002, 2, 3002),
(2003, 3, 3003),
(2004, 4, 3004),
(2005, 5, 3005),
(2006, 6, 3006),
(2007, 7, 3007),
(2008, 8, 3008),
(2009, 9, 3009),
(2010, 10, 3010),
(2011, 11, 3011),
(2012, 12, 3012),
(2013, 13, 3013),
(2014, 14, 3014),
(2015, 15, 3015),
(2016, 16, 3016),
(2017, 17, 3017),
(2018, 18, 3018),
(2019, 19, 3019),
(2020, 20, 3020),
(2021, 21, 3021),
(2022, 22, 3022),
(2023, 23, 3023),
(2024, 24, 3024);


CREATE TABLE `team` (
  `Num_of_people_team` int(8) NOT NULL,
  `Team_name` varchar(16) NOT NULL,
  `Team_id` int(16) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


INSERT INTO `team` (`Num_of_people_team`, `Team_name`, `Team_id`) VALUES
(3, 'abc', 5001),
(3, 'bcd', 5002),
(3, 'cde', 5003),
(3, 'def', 5004),
(3, 'efg', 5005),
(3, 'fgh', 5006),
(2, 'ghi', 5007),
(3, 'hij', 5008),
(3, 'ijk', 5009),
(4, 'jkl', 5010),
(2, 'klm', 5011);


CREATE TABLE `weight_lifting` (
  `Event_id` int(16) NOT NULL,
  `W_category` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;



INSERT INTO `weight_lifting` (`Event_id`, `W_category`) VALUES
(7005, '56kg'),
(7006, '69kg'),
(7007, '77kg'),
(7008, '85kg');

ALTER TABLE `athlete`
  ADD PRIMARY KEY (`Athlete_id`);

ALTER TABLE `athlete_belong`
  ADD PRIMARY KEY (`Athlete_belong_id`),
  ADD UNIQUE KEY `Athlete_id` (`Athlete_id`),
  ADD KEY `Team_id` (`Team_id`);


ALTER TABLE `boxing`
  ADD PRIMARY KEY (`Event_id`),
  ADD KEY `Event_id` (`Event_id`);


ALTER TABLE `coach`
  ADD PRIMARY KEY (`Coach_id`),
  ADD KEY `Team_id` (`Team_id`);


ALTER TABLE `event`
  ADD PRIMARY KEY (`Event_id`);

ALTER TABLE `event_official`
  ADD PRIMARY KEY (`Event_official_id`),
  ADD KEY `Event_id` (`Event_id`),
  ADD KEY `Id` (`Id`);

ALTER TABLE `injury_record`
  ADD PRIMARY KEY (`Athlete_id`,`I_id`),
  ADD KEY `Athlete_id` (`Athlete_id`);

ALTER TABLE `judge`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `Id` (`Id`);


ALTER TABLE `match_officials`
  ADD PRIMARY KEY (`Id`);

ALTER TABLE `medal`
  ADD PRIMARY KEY (`Medal_id`,`Athlete_id`),
  ADD KEY `Athlete_id` (`Athlete_id`);

ALTER TABLE `participate`
  ADD PRIMARY KEY (`Participate_id`),
  ADD KEY `Athlete_id` (`Athlete_id`),
  ADD KEY `Event_id` (`Event_id`);


ALTER TABLE `phone_no`
  ADD PRIMARY KEY (`Phone_id`),
  ADD KEY `Athlete_id` (`Athlete_id`);

ALTER TABLE `refree`
  ADD PRIMARY KEY (`Id`),
  ADD KEY `Id` (`Id`);

ALTER TABLE `result`
  ADD PRIMARY KEY (`Result_id`),
  ADD KEY `Medal_id` (`Medal_id`),
  ADD KEY `Athlete_id` (`Athlete_id`);

ALTER TABLE `team`
  ADD PRIMARY KEY (`Team_id`);

ALTER TABLE `weight_lifting`
  ADD PRIMARY KEY (`Event_id`),
  ADD KEY `Event_id` (`Event_id`);

ALTER TABLE `athlete_belong`
  ADD CONSTRAINT `athlete_belong_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`),
  ADD CONSTRAINT `athlete_belong_ibfk_2` FOREIGN KEY (`Team_id`) REFERENCES `team` (`Team_id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `boxing`
  ADD CONSTRAINT `boxing_ibfk_1` FOREIGN KEY (`Event_id`) REFERENCES `event` (`Event_id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `coach`
  ADD CONSTRAINT `coach_ibfk_1` FOREIGN KEY (`Team_id`) REFERENCES `team` (`Team_id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `event_official`
  ADD CONSTRAINT `event_official_ibfk_1` FOREIGN KEY (`Event_id`) REFERENCES `event` (`Event_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `event_official_ibfk_2` FOREIGN KEY (`Id`) REFERENCES `match_officials` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `injury_record`
  ADD CONSTRAINT `injury_record_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `judge`
  ADD CONSTRAINT `judge_ibfk_1` FOREIGN KEY (`Id`) REFERENCES `match_officials` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `medal`
  ADD CONSTRAINT `medal_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `participate`
  ADD CONSTRAINT `participate_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `participate_ibfk_2` FOREIGN KEY (`Event_id`) REFERENCES `event` (`Event_id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `phone_no`
  ADD CONSTRAINT `phone_no_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `refree`
  ADD CONSTRAINT `refree_ibfk_1` FOREIGN KEY (`Id`) REFERENCES `match_officials` (`Id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `result`
  ADD CONSTRAINT `result_ibfk_1` FOREIGN KEY (`Medal_id`) REFERENCES `medal` (`Medal_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `result_ibfk_2` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`) ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `weight_lifting`
  ADD CONSTRAINT `weight_lifting_ibfk_1` FOREIGN KEY (`Event_id`) REFERENCES `event` (`Event_id`) ON DELETE CASCADE ON UPDATE CASCADE;

INSERT INTO `injury_record` (`Athlete_id`, `I_id`, `Description`) VALUES ('6', '4009', 'Broke right leg');

Queries (#24)

1. Selects all the distint ages of atheletes 

 SELECT DISTINCT age FROM athlete;
age
27
23
33
21
24
28
29
32
31
25
22
30
26
20
19


2. Team_name and num_of_people_team are displayed in the order

SELECT Team_name,Num_of_people_team FROM team ORDER BY Num_of_people_team,Team_name

Team_name	Num_of_people_team
ghi	2
klm	2
abc	3
bcd	3
cde	3
def	3
efg	3
fgh	3
hij	3
ijk	3
jkl	4

3. Sum up the experience of match_officials who have have same name

SELECT Name, SUM(Experience_years) FROM match_officials GROUP BY Name;


Name	SUM(Experience_years)	
A1	5	
A10	9	
A11	10	
A12	8	
A13	11	
A14	9	
A15	7	
A16	9	
A2	4	
A3	3	
A4	2	
A5	5	
A6	3	
A7	5	
A9	8	

4. Joins two tables and displays the attributes Athlete_id, Name, Medal_type

SELECT medal.Athlete_id, athlete.Name,medal.Medal_type FROM medal INNER JOIN athlete on athlete.Athlete_id = medal.Athlete_id


Athlete_id	Name	Medal_type	
1	Long Qingquan	Gold	
2	Shi Zhiyong	Silver	
3	Lu Xiaojun	Bronze	
4	Tian Tao	Gold	
5	Deng Wei	Silver	
6	Xiang Yanmei	Bronze	
7	Meng Suping	Gold	
8	 Sarah Robles	Silver	
9	 Jenny Arthur	Bronze	
10	Morghan King	Gold	
11	 Kendrick Farris Silver	
12	 Chen Lijun	Bronze	
13	Yang Zhe	Gold	
14	 Li Yajun	Silver	
15	 Lu Bin	Bronze	
16	 Hu Jianguan	Gold	
17	Zhang Jiawei	Silver	
18	 Shan Jun	Bronze	
19	Hu Qianxun	Gold	
20	Liu Wei	Silver	
21	 Zhao Minggang	Bronze	
22	 Yu Fengkai	Gold	
23	Ren Cancan	Silver	
24	 Yin Junhua	Bronze	

5. Displays the name and description of the athelets injury by joining two tables

SELECT athlete.Name, injury_record.Description FROM athlete, injury_record WHERE athlete.Athlete_id = injury_record.Athlete_id


Name	         Description	
Long Qingquan	Sprain on right hand.	
Deng Wei	Right leg injury	
Xiang Yanmei	Right hand injury	
Sarah Robles	Nose bleed	
Morghan King	Dislocated right elbow	
Lu Bin	Left    leg sprain	
Liu Wei   	eye injury	
Claressa Shields	Thigh cut	

6. Aliasing the Column names.

SELECT athlete.Name as athlete_name , injury_record.Description AS Des FROM athlete, injury_record WHERE athlete.Athlete_id = injury_record.Athlete_id


athlete_name	Des	

Long Qingquan	Sprain on right hand.	
Deng Wei	Right leg injury	
Xiang Yanmei	Right hand injury	
 Sarah Robles	Nose bleed	
Morghan King	Dislocated right elbow	
 Lu Bin	Left leg sprain	
Liu Wei	eye injury	
 Claressa Shields	Thigh cut	




7. Displays injury_record of Athlete_id 6

SELECT  I_id, Gender, Description FROM athlete, injury_record WHERE athlete.Athlete_id = injury_record.Athlete_id and injury_record.Athlete_id = 6


I_id	Gender	Description	
4003	F	Right hand injury	
4009	F	Broke right leg	

8.Displayes athelete who are female and doesn't have 1 as their Athlete_id


SELECT *  FROM `athlete` WHERE `Athlete_id` NOT LIKE '1' AND `Gender` LIKE 'F'


Athlete_id	Name	DOB	Gender	Country	Age	
5	Deng Wei	1993-02-14	F	China	24	
6	Xiang Yanmei	1992-06-13	F	China	23	
7	Meng Suping	1989-07-17	F	China	28	
8	 Sarah Robles	1988-08-01	F	USA	29	
9	 Jenny Arthur	1993-12-11	F	USA	23	
10	Morghan King	1985-10-08	F	USA	32	
14	 Li Yajun	1993-04-27	F	China	23	
23	Ren Cancan	1986-04-26	F	China	30	
24	 Yin Junhua	1990-08-27	F	China	26	
25	 Li Qian	1990-06-06	F	China	26	
32	 Mikaela Mayer	1990-07-04	F	USA	28	
33	 Claressa Shields	1995-03-17	F	USA	21

9. Displays the Coloums of athlete table who have an injury record



SELECT athlete.* FROM athlete,injury_record WHERE athlete.Athlete_id = injury_record.Athlete_id


Athlete_id	Name	DOB	Gender	Country	Age	
1	Long Qingquan	1990-12-03	M	China	27	
5	Deng Wei	1993-02-14	F	China	24	
6	Xiang Yanmei	1992-06-13	F	China	23	
6	Xiang Yanmei	1992-06-13	F	China	23	
8	 Sarah Robles	1988-08-01	F	USA	29	
10	Morghan King	1985-10-08	F	USA	32	
15	 Lu Bin	1994-10-18	M	China	22	
20	Liu Wei	1987-11-27	M	China	29	
33	 Claressa Shields	1995-03-17	F	USA	21


10.Displays the athletes whos country name is USA and they are ordered by their name


SELECT Name, Gender, DOB from athlete WHERE Country = 'USA' ORDER BY Name


Name   	Gender	DOB	
 Antonio Vargas	M	1996-08-15	
 Carlos Balderas	M	1996-08-24	
 Charles Conwell	M	1997-11-02	
 Claressa Shields	F	1995-03-17	
 Gary Antuanne russell	M	1996-07-14	
 Jenny Arthur	F	1993-12-11	
 Kendrick Farris	M	1986-07-02	
 Mikaela Mayer	F	1990-07-04	
 Sarah Robles	F	1988-08-01	
 Shakur Stevenson	M	1997-06-28	
Morghan King	F	1985-10-08	
Nico Hernandez	M	1996-01-04	

11. Displays the name of athlete who has an age between 26 and 60


SELECT Name FROM athlete WHERE Age BETWEEN 26 and 60


Name	
Long Qingquan	
Lu Xiaojun	
Meng Suping	
 Sarah Robles	
Morghan King	
 Kendrick Farris	
Zhang Jiawei	
Hu Qianxun	
Liu Wei	
 Zhao Minggang	
Ren Cancan	
 Yin Junhua	
 Li Qian	
 Mikaela Mayer	


12. Unions two medal_id froms two different tables


(SELECT Medal_id FROM medal  WHERE Prize_money='10000' and Medal_type = 'Gold')
UNION
(SELECT Medal_id FROM medal  WHERE Prize_money='5000' and Medal_type = 'Silver')


Medal_id	
2001	
2004	
2007	
2010	
2013	
2016	
2019	
2022	
2002	
2005	
2008	
2011	
2014	
2017	
2020	
2023	

13. Displays the Average age of the athelete who are male


SELECT AVG(age) FROM athlete where Gender ='M'

AVG(age)	

24.0000	


14. Counts the Distint Athlete_id in Participate Table

SELECT COUNT(DISTINCT Athlete_id) FROM participate


COUNT(DISTINCT Athlete_id) 
33	

15. Joins two tables and group them by The W_category and displays the category

SELECT W_category  FROM `weight_lifting` JOIN event  WHERE Location = 'Stage-01' GROUP BY W_category


W_category	
56kg	
69kg	
77kg	
85kg	

16. Joins 3 tables whose location is stage-01  and event id is out of other join table which are ordered in ascending order

SELECT event.Event_id FROM event JOIN boxing NATURAL JOIN weight_lifting WHERE event.Location ='Stage-01' and event.Event_id in ( SELECT event.Event_id FROM event JOIN boxing NATURAL JOIN weight_lifting WHERE event.Location ='Stage-01')  
ORDER BY `event`.`Event_id` ASC


Event_id(Result Empty result set )

17. Displays name of the athlete who's age is greater than all athletes

SELECT Name FROM athlete where Age > ALL(SELECT Age FROM athlete where Country = 'USA')


Name

Lu Xiaojun	


18.Deletes the Rows which have athlete_id ='33'
  
DELETE FROM participate WHERE Athlete_id= '33'

2 rows affected. (Query took 0.0262 seconds.)

19. Checked the foreign key constraint 

DELETE FROM athlete WHERE Age < 20

MySQL said: Documentation

#1451 - Cannot delete or update a parent row: a foreign key constraint fails (`test1`.`athlete_belong`, CONSTRAINT `athlete_belong_ibfk_1` FOREIGN KEY (`Athlete_id`) REFERENCES `athlete` (`Athlete_id`))
 
20. Increase the Age of every player 5 years

update athlete SET Age = Age + 5
33 rows affected. (Query took 0.0534 seconds.)

21. A view is created on athelete table

CREATE VIEW Players as SELECT Name, Gender , Country from athlete

  MySQL returned an empty result set (i.e. zero rows). (Query took 0.0686 seconds.)

22.A veiw is created over athelete table where Athletes belong to USA

CREATE VIEW Player_usa as SELECT Name, Gender , Country from athlete where Country = 'USA'
	
MySQL returned an empty result set (i.e. zero rows). (Query took 0.0326 seconds.)

23.Displays Minimun age of the athlete who belongs to USA


SELECT Min(age) FROM athlete WHERE Country ="USA"


Min(age)
24	

24. Displaying the Athlete_id who have injury record
 

SELECT Athlete_id  from athlete WHERE (Athlete_id) in ( SELECT Athlete_id FROM injury_record )


Athlete_id	
1	
5	
6	
8	
10	
15	
20	
33	

25. Counts the number of athletes belong to country

SELECT COUNT(athlete_id), Country 
FROM athlete 
GROUP BY Country 
HAVING COUNT(athlete_id) > 5



COUNT(athlete_id)	Country	

21	China	

12	USA

Query din't work
///

#1248 - Every derived table must have its own alias

SELECT  Team_id,Coach_id, Coach_country FROM (SELECT Team_id,Coach_id, Coach_country FROM team, coach WHERE team.Team_id = coach.Team_id);

////
----------------------------------------------------------------------------------------------------------------------------------------------------------------	
SQL Queries for creation of tables:( PHASE 1)

CREATE TABLE `athlete` (
  `athlete_id` varchar(8) NOT NULL,
  `gender` text NOT NULL,
  `name` varchar(10) NOT NULL,
  `DOB` varchar(65) NOT NULL,
  `country` varchar(20) NOT NULL,
  `age` int(7) NOT NULL,
  `phone number` int(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table `athlete`

INSERT INTO `athlete` (`athlete_id`, `gender`, `name`, `DOB`, `country`, `age`, `phone number`) VALUES
('A1', 'Male', 'James', '3/2/1990', 'USA', 27, 457812069),
('A2', 'Female', 'Stella', '4/5/1991', 'USA', 26, 248125751);

-- Table structure for table `athlete belon`

CREATE TABLE `athlete belon` (
  `ath blog ID` varchar(5) NOT NULL,
  `AID` varchar(5) NOT NULL,
  `teamID` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `boxing`

CREATE TABLE `boxing` (
  `eventID` varchar(5) NOT NULL,
  `Bcatageory` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `coach`
CREATE TABLE `coach` (
  `country` text NOT NULL,
  `coach name` int(15) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `event`

CREATE TABLE `event` (
  `end date` varchar(10) NOT NULL,
  `start date` varchar(10) NOT NULL,
  `eventID` varchar(5) NOT NULL,
  `location` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `event official`

CREATE TABLE `event official` (
  `event official` varchar(20) NOT NULL,
  `eventID` int(5) NOT NULL,
  `ID` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `injury record`
CREATE TABLE `injury record` (
  `IID` varchar(5) NOT NULL,
  `description` text NOT NULL,
  `athleteid` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `judge`

CREATE TABLE `judge` (
  `ID` varchar(5) NOT NULL,
  `name` text NOT NULL,
  `experience` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `match official`
CREATE TABLE `match official` (
  `ID` int(11) NOT NULL,
  `name` int(11) NOT NULL,
  `experience` int(11) NOT NULL,
  `phone number` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `medal`

CREATE TABLE `medal` (
  `medalID` varchar(5) NOT NULL,
  `medal type` text NOT NULL,
  `prize money` int(12) NOT NULL,
  `athleteid` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `phone`
CREATE TABLE `phone` (
  `phoneID` varchar(5) NOT NULL,
  `phone number` int(10) NOT NULL,
  `athleteID` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `refree`

CREATE TABLE `refree` (
  `ID` varchar(5) NOT NULL,
  `name` text NOT NULL,
  `experience` varchar(6) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `result`

CREATE TABLE `result` (
  `resultID` varchar(5) NOT NULL,
  `medal id` varchar(5) NOT NULL,
  `athlete id` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `team`

CREATE TABLE `team` (
  `No of people in a team` int(10) NOT NULL,
  `tname` text NOT NULL,
  `teamID` varchar(4) NOT NULL,
  `coachID` varchar(5) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Table structure for table `weightlifting`

CREATE TABLE `weightlifting` (
  `eventID` int(5) NOT NULL,
  `Wcatageory` int(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Indexes for table `athlete`
--
ALTER TABLE `athlete`
  ADD PRIMARY KEY (`athlete_id`);

-- Indexes for table `athlete belon`
--
ALTER TABLE `athlete belon`
  ADD PRIMARY KEY (`ath blog ID`),
  ADD KEY `AID` (`AID`),
  ADD KEY `athlete belon_ibfk_2` (`teamID`);

-- Indexes for table `boxing`
--

ALTER TABLE `boxing`
  ADD PRIMARY KEY (`eventID`);

-- Indexes for table `coach`
ALTER TABLE `coach`
  ADD PRIMARY KEY (`coach name`);

-- Indexes for table `event`
ALTER TABLE `event`
  ADD PRIMARY KEY (`eventID`);

-- Indexes for table `event official`
--
ALTER TABLE `event official`
  ADD PRIMARY KEY (`event official`),
  ADD KEY `ID` (`ID`);
-- Indexes for table `injury record`
--
ALTER TABLE `injury record`
  ADD PRIMARY KEY (`IID`),
  ADD KEY `athleteid` (`athleteid`);
-- Indexes for table `judge`
--
ALTER TABLE `judge`
  ADD PRIMARY KEY (`ID`);


-- Indexes for table `match official`
--
ALTER TABLE `match official`
  ADD PRIMARY KEY (`ID`);
-- Indexes for table `medal`
--
ALTER TABLE `medal`
  ADD PRIMARY KEY (`medalID`),
  ADD KEY `athleteid` (`athleteid`);
-- Indexes for table `phone`
--
ALTER TABLE `phone`
  ADD PRIMARY KEY (`phoneID`),
  ADD KEY `athleteID` (`athleteID`);
-- Indexes for table `refree`
--
ALTER TABLE `refree`
  ADD PRIMARY KEY (`ID`);
-- Indexes for table `result`
--
ALTER TABLE `result`
  ADD PRIMARY KEY (`resultID`),
  ADD KEY `medal id` (`medal id`),
  ADD KEY `athlete id` (`athlete id`);



-- Indexes for table `team`
--
ALTER TABLE `team`
  ADD PRIMARY KEY (`teamID`);
-- Indexes for table `weightlifting`
--
ALTER TABLE `weightlifting`
  ADD PRIMARY KEY (`eventID`);

--
-- Constraints for dumped tables
--

--
-- Constraints for table `athlete belon`
--
ALTER TABLE `athlete belon`
  ADD CONSTRAINT `athlete belon_ibfk_1` FOREIGN KEY (`AID`) REFERENCES `athlete` (`athlete_id`),
  ADD CONSTRAINT `athlete belon_ibfk_2` FOREIGN KEY (`teamID`) REFERENCES `team` (`teamID`);

--
-- Constraints for table `event official`
--
ALTER TABLE `event official`
  ADD CONSTRAINT `event official_ibfk_1` FOREIGN KEY (`ID`) REFERENCES `refree` (`ID`);

--
-- Constraints for table `injury record`
--
ALTER TABLE `injury record`
  ADD CONSTRAINT `injury record_ibfk_1` FOREIGN KEY (`athleteid`) REFERENCES `athlete` (`athlete_id`);
-- Constraints for table `medal`
--
ALTER TABLE `medal`
  ADD CONSTRAINT `medal_ibfk_1` FOREIGN KEY (`athleteid`) REFERENCES `athlete` (`athlete_id`);
-- Constraints for table `phone`
--
ALTER TABLE `phone`
  ADD CONSTRAINT `phone_ibfk_1` FOREIGN KEY (`athleteID`) REFERENCES `athlete` (`athlete_id`);

--
-- Constraints for table `result`
--
ALTER TABLE `result`
  ADD CONSTRAINT `result_ibfk_1` FOREIGN KEY (`medal id`) REFERENCES `medal` (`medalID`),
  ADD CONSTRAINT `result_ibfk_2` FOREIGN KEY (`athlete id`) REFERENCES `athlete` (`athlete_id`);

-- Dumping data for table `athlete`

INSERT INTO `athlete` (`athlete_id`, `gender`, `name`, `DOB`, `country`, `age`, `phone number`) VALUES
('A1', 'Male', 'James', '3/2/1990', 'USA', 27, 457812069),
('A2', 'Female', 'Stella', '4/5/1991', 'USA', 26, 248125751);


	



